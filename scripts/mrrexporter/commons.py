import os
import sys
import json
import time
import threading
import subprocess
import multiprocessing
import struct
from math import pi

import bpy
import bpy.path
import bmesh
from mathutils import *
import bpy.types

D = bpy.data
C = bpy.context

EXT = ".json"
MAX_DIGITS = 6
PRECISSION = 0.0000001

NUM_BONES_PERVERTEX = 4

DATATYPE_FLOAT = "float"
DATATYPE_INT = "int"
DATATYPE_SHORT = "short"
DATATYPE_VEC2 = "vec2"
DATATYPE_VEC3 = "vec3"
DATATYPE_VEC4 = "vec4"
DATATYPE_MAT3 = "mat3"
DATATYPE_MAT4 = "mat4"
DATATYPE_SAMPLER2D = "sampler2D"

ATTRNAME_VERTEX = "Vertices"
ATTRNAME_NORMAL = "Normals"
ATTRNAME_MATERIAL = "MaterialIndex"
ATTRNAME_TEXTURE = "Texture"
ATTRNAME_WEIGHT = "Weight"
ATTRNAME_BIND = "BoneIndices"

ANAME_VERTEX = "aVertex"
ANAME_NORMAL = "aNormal"
ANAME_MATERIAL = "aMatIndex"
ANAME_TEXTURECO = "aTexCo"
ANAME_WEIGHT = "aWeights"
ANAME_BIND = "aBoneIndices"

INDEX_VERTEX = 0
INDEX_NORMAL = 1
INDEX_MATERIAL = 2
INDEX_TEXTURE = 3
INDEX_WEIGHT = 4
INDEX_BIND = 5

DATATYPEATTR_VERTEX = DATATYPE_VEC3
DATATYPEATTR_NORMAL = DATATYPE_VEC3
DATATYPEATTR_MATERIAL = DATATYPE_FLOAT
DATATYPEATTR_TEXTURE = DATATYPE_VEC2
DATATYPEATTR_WEIGHT = DATATYPE_VEC4
DATATYPEATTR_BIND = DATATYPE_VEC4

DATATYPEKEY_VERTEX = DATATYPE_FLOAT
DATATYPEKEY_NORMAL = DATATYPE_FLOAT
DATATYPEKEY_MATERIAL = DATATYPE_FLOAT
DATATYPEKEY_TEXTURE = DATATYPE_FLOAT
DATATYPEKEY_WEIGHT = DATATYPE_FLOAT
DATATYPEKEY_BIND = DATATYPE_FLOAT

SIZEKEY_VERTEX = 3
SIZEKEY_NORMAL = 3
SIZEKEY_MATERIAL = 1
SIZEKEY_TEXTURE = 2
SIZEKEY_WEIGHT = NUM_BONES_PERVERTEX
SIZEKEY_BIND = NUM_BONES_PERVERTEX

UNIFORMGENERATOR_MVP_MATRIX = "Generator_Model_View_Projection_Matrix"
UNIFORMGENERATOR_MODEL_MATRIX = "Generator_Model_Matrix"
UNIFORMGENERATOR_VIEW_MATRIX = "Generator_View_Matrix"
UNIFORMGENERATOR_PROJECTION_MATRIX = "Generator_Projection_Matrix"
UNIFORMGENERATOR_MODELVIEW_MATRIX = "Generator_Model_View_Matrix"
UNIFORMGENERATOR_NORMAL_MATRIX = "Generator_Normal_Matrix"
UNIFORMGENERATOR_TMV_MATRIX = "Generator_Transp_Model_View_Matrix"
UNIFORMGENERATOR_ITMV_MATRIX = "Generator_Inverse_Transp_Model_View_Matrix"
UNIFORMGENERATOR_MATERIAL_AMBIENT_COLOR = "Generator_Material_Ambient_Color"
UNIFORMGENERATOR_MATERIAL_AMBIENT_INTENSITY = "Generator_Material_Ambient_Intensity"
UNIFORMGENERATOR_MATERIAL_DIFFUSE_COLOR = "Generator_Material_Diffuse_Color"
UNIFORMGENERATOR_MATERIAL_DIFFUSE_INTENSITY = "Generator_Material_Diffuse_Intensity"
UNIFORMGENERATOR_MATERIAL_SPECULAR_COLOR = "Generator_Material_Specular_Color"
UNIFORMGENERATOR_MATERIAL_SPECULAR_INTENSITY = "Generator_Material_Specular_Intensity"
UNIFORMGENERATOR_BONE_MATRIX = "Generator_Bone_Matrix"
UNIFORMGENERATOR_TEXTURED_MATERIAL = "Generator_Textured_Material"
UNIFORMGENERATOR_TEXTURE = "Generator_Texture_Sampler"
UNIFORMGENERATOR_LIGHT_POSITION = "Generator_Light_Position"
UNIFORMGENERATOR_LIGHT_COLOR = "Generator_Light_Color"
UNIFORMGENERATOR_LIGHT_POSITION_ARRAY = "Generator_Light_Position_Array"
UNIFORMGENERATOR_LIGHT_COLOR_ARRAY = "Generator_Light_Color_Array"

UNIFORM_MVP_MATRIX = "Model_View_Projection_Matrix"
UNIFORM_MODEL_MATRIX = "Model_Matrix"
UNIFORM_VIEW_MATRIX = "View_Matrix"
UNIFORM_PROJECTION_MATRIX = "Projection_Matrix"
UNIFORM_MODELVIEW_MATRIX = "Model_View_Matrix"
UNIFORM_NORMAL_MATRIX = "Normal_Matrix"
UNIFORM_TMV_MATRIX = "Transp_Model_View_Matrix"
UNIFORM_ITMV_MATRIX = "Inverse_Transp_Model_View_Matrix"
UNIFORM_MATERIAL_AMBIENT_COLOR = "Material_Ambient_Color"
UNIFORM_MATERIAL_AMBIENT_INTENSITY = "Material_Ambient_Intensity"
UNIFORM_MATERIAL_DIFFUSE_COLOR = "Material_Diffuse_Color"
UNIFORM_MATERIAL_DIFFUSE_INTENSITY = "Material_Diffuse_Intensity"
UNIFORM_MATERIAL_SPECULAR_COLOR = "Material_Specular_Color"
UNIFORM_MATERIAL_SPECULAR_INTENSITY = "Material_Specular_Intensity"
UNIFORM_BONE_MATRIX = "Bone_Matrix"
UNIFORM_TEXTURED_MATERIAL = "Textured_Material"
UNIFORM_TEXTURE = "Texture_Sampler"
UNIFORM_LIGHT_POSITION = "Light_Position"
UNIFORM_LIGHT_COLOR = "Light_Color"
UNIFORM_LIGHT_POSITION_ARRAY = "Light_Position_Array"
UNIFORM_LIGHT_COLOR_ARRAY = "Light_Color_Array"

UNAME_MVP_MATRIX = "mrMvpMatrix"
UNAME_MODEL_MATRIX = "mrModelMatrix"
UNAME_VIEW_MATRIX = "mrViewMatrix"
UNAME_PROJECTION_MATRIX = "projMatrix"
UNAME_MODELVIEW_MATRIX = "mrModelViewMatrix"
UNAME_NORMAL_MATRIX = "mrNormalMatrix"
UNAME_MATERIAL_AMBIENT_COLOR = "mrAmbientColor"
UNAME_MATERIAL_AMBIENT_INTENSITY = "mrAmbientInt"
UNAME_MATERIAL_DIFFUSE_COLOR = "mrDiffuseColor"
UNAME_MATERIAL_DIFFUSE_INTENSITY = "mrDiffuseInt"
UNAME_MATERIAL_SPECULAR_COLOR = "mrSpecularColor"
UNAME_MATERIAL_SPECULAR_INTENSITY = "mrSpecularInt"
UNAME_BONE_MATRIX = "mrBones"
UNAME_TEXTURE_SAMPLER = "mrTexture"
UNAME_TEXTURED_MATERIAL = "mrTexturedMaterials"
UNAME_LIGHT_POSITION = "mrLightPosition"
UNAME_LIGHT_COLOR = "mrLightColor"
UNAME_LIGHT_POSITION_ARRAY = "mrLightsPosition"
UNAME_LIGHT_COLOR_ARRAY = "mrLightsColor"


MESHDICT_FACENAME = "Faces"
MESHDICT_EDGESNAME = "Edges"

DRAWTYPE_LINES = "Lines"
DRAWTYPE_TRIANGLES = "Triangles"

SCENEOBJTYPE_SCENE = "Scene"
SCENEOBJTYPE_MODEL  = "Model"
SCENEOBJTYPE_CAMERA = "Camera"
SCENEOBJTYPE_LIGHT = "Light"

LENS_PERSPECTIVE = "Perspective"
LENS_ORTHOGRAPHIC = "Orthographic"

DEFAULT_NAME_SCENE = "Scene"
DEFAULT_NAME_MODEL = "Model"
DEFAULT_NAME_CAMERA = "Camera"
DEFAULT_NAME_LIGHT = "Light"

RENDERING_LEVEL_OBJECT = 0
RENDERING_LEVEL_SCENE = 1
RENDERING_LEVEL_TOP_SCENE_LEVEL = 2
RENDERING_LEVEL_USER_LEVEL = 3

ACTIONTYPE_SKELETAL = "Skeletal"

TEXMAGFILTER_NEAREST = "Nearest"
TEXMAGFILTER_LINEAR = "Linear"
TEXMINFILTER_NEAREST = "Nearest"
TEXMINFILTER_LINEAR = "Linear"
TEXMINFILTER_NEAREST_NEAREST = "Nearest_Nearest"
TEXMINFILTER_NEAREST_LINEAR = "Nearest_Linear"
TEXMINFILTER_LINEAR_LINEAR = "Linear_Linear"
TEXMINFILTER_LINEAR_NEAREST = "Linear_Nearest"

LIGHTTYPE_SPOT = "Spot"
LIGHTTYPE_POINT = "Point"

DEFAULT_TEXTURE_INDEX = 1

ACTION_FPS = 24

SCENE_CLEARCOLOR = [0.5,0.5,0.5,1.0]

ORDER = {ATTRNAME_VERTEX: 0, ATTRNAME_NORMAL: 1, ATTRNAME_MATERIAL:2, ATTRNAME_TEXTURE: 3, ATTRNAME_WEIGHT: 4, ATTRNAME_BIND: 5}
DATATYPE_SIZES = {DATATYPE_FLOAT: 1, DATATYPE_INT: 1, DATATYPE_VEC2: 2, DATATYPE_VEC3: 3, DATATYPE_VEC4: 4, DATATYPE_MAT3: 9, DATATYPE_MAT4: 16}

#################################################################################
# COMMON FUNCTIONS
#################################################################################
def cleanName(name):
    return name.replace(".","_").replace("-","_")

def getDataSize(dataType):
    return DATATYPE_SIZES[dataType]

def cmpVec(v1,v2):
    """Compare if two vectors are equals"""
    if v1 == v2:
        return True
    return (v1-v2).length < PRECISSION

def mround(f):
    """Rounds a float or list of floats"""
    if hasattr(f, '__iter__') or hasattr(f, '__getitem__'):
        return [round(e, MAX_DIGITS) for e in f]
    else:
        return round(f, MAX_DIGITS)